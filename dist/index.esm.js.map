{"version":3,"file":"index.esm.js","sources":["../src/api.js","../src/base64.js","../src/bindCustomEvent.js","../src/dispatch.js","../src/templater.js"],"sourcesContent":["/**\n * @module api\n * @description 接口\n */\n\nimport 'whatwg-fetch';\n\n/**\n * @typedef {Object} api\n * @property {function} post - POST方法\n * @property {function} get - GET方法\n */\n\n/**\n * @return {api}\n */\nexport default (() => {\n  /**\n   * 错误处理，例如404\n   * @param {Response} res - 服务器响应\n   * @return {(Response|Promise)}\n   * @private\n   */\n  const handleError = (res) => {\n    const { ok, statusText } = res;\n\n    return ok ? res : Promise.reject(new Error(statusText));\n  };\n\n  /**\n   * 数据类型过滤，仅接收JSON\n   * @param {Response} res - 服务器响应\n   * @return {(Response|Promise)}\n   * @private\n   */\n  const handleContent = (res) => {\n    const contentType = res.headers.get('content-type');\n\n    if (/application\\/json/i.test(contentType)) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Not a JSON'));\n  };\n\n  /**\n   * 增\n   * @param {string} input - 请求URL\n   * @param {Object} data - 提交数据\n   * @return {Promise}\n   */\n  const post = (input, data) => (\n    fetch(input, {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      data: JSON.stringify(data),\n    })\n      .then(handleError)\n      .then(handleContent)\n  );\n\n  /**\n   * 查\n   * @param {string} input - 请求URL\n   * @return {Promise}\n   */\n  const get = input => (\n    fetch(input, {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json',\n      }),\n    })\n      .then(handleError)\n      .then(handleContent)\n  );\n\n  /**\n   * 改\n   * @param {string} input - 请求URL\n   * @return {Promise}\n   */\n  // const put = input => Promise.resolve('done');\n\n  /**\n   * 删\n   * @param {string} input - 请求URL\n   * @return {Promise}\n   */\n  // const del = input => Promise.resolve('done');\n\n  return {\n    post,\n    get,\n    // put,\n    // delete: del,\n  };\n})();\n","/**\n * base64编码\n * @param  {string} str 需编码字符串\n * @return {string}\n */\nconst encodeBase64 = str => (\n  window.btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => (\n    String.fromCharCode(`0x${p1}`)\n  )))\n);\n\n/**\n * base64解码\n * @param  {string} str 需解码字符串，原字符串需utf-8编码\n * @return {string}\n */\nconst decodeBase64 = str => (\n  decodeURIComponent(Array.from(window.atob(str)).map(c => (\n    `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`\n  )).join(''))\n);\n\nexport {\n  encodeBase64,\n  decodeBase64,\n};\n","/**\n * @module bindCustomEvent\n * @description 绑定自定义事件\n * @param {Object.<string, function>} obj - 自定义事件和处理函数映射表\n * @example  <caption>传入自定义事件名和处理函数的映射表</caption>\n * function customEventTrigger(type, data) {\n *   const event = new CustomEvent(type, {\n *     detail: data || { name: type },\n *   });\n *\n *   window.dispatchEvent(event);\n * }\n *\n * function eventATrigger(data) {\n *   customEventTrigger('eventA', { data });\n * }\n * @example\n * const customEvents = {\n *   eventA: (e) => {\n *     const { data } = e.detail;\n *\n *     console.log(data);\n *   },\n * };\n *\n * bindCustomEvent(customEvents);\n *\n * eventATrigger({ data: true });\n */\n\nexport default (obj) => {\n  const eventMap = new Map(Object.entries(obj));\n\n  eventMap.forEach((handler, event) => {\n    window.addEventListener(event, handler, false);\n  });\n};\n","/**\n * @module dispatch\n * @description 事件分发\n * @param {Object.<string, function>} handlers - 事件处理函数组成的对象\n * @return {function} 分发函数\n * @example  <caption>事件代理利用e.target.dataset.trigger查找handlers中匹配处理函数</caption>\n * <ul class=\"anchor-list\">\n *   <li><a href=\"#linkA\" data-trigger=\"link\" data-value=\"A\">Link A</a></li>\n *   <li><a href=\"#linkB\" data-trigger=\"link\" data-value=\"B\">Link B</a></li>\n *   <li><a href=\"#linkC\" data-trigger=\"link\" data-value=\"C\">Link C</a></li>\n * </ul>\n * @example\n * const createClickHandlers = () => {\n *   const link = (e) => {\n *     const { value } = e.target.dataset;\n *\n *     alert(value);\n *   };\n *\n *   return {\n *     link,\n *   };\n * };\n *\n * const clickHandlers = createClickHandlers();\n * document.body.addEventListener('click', dispatch(clickHandlers), false);\n */\n\nexport default handlers => (e) => {\n  const { trigger } = e.target.dataset;\n\n  if (trigger && {}.hasOwnProperty.call(handlers, trigger)) {\n    handlers[trigger](e);\n  }\n};\n","/**\n * @module templater\n * @description 模版引擎\n * @example <caption>通过string查找</caption>\n * const template = templater`\n *   <p class=\"content\">${'content'}</p>\n * `;\n *\n * const context = { content: 'Hello World' };\n * const result = template(context);\n *\n * document.querySelector('#target').insertAdjacentHTML('beforeend', result);\n *\n * @example <caption>通过function查找，注意设置函数的displayName属性为data对应的key</caption>\n * const content = data => (\n *   Array.isArray(data) ?\n *     data.reduce((prev, d) => `${prev}<p>${d}</p>`, '') :\n *     `<p>${data}</p>`\n * );\n * content.displayName = 'content';\n *\n * const template = templater`\n *   <div class=\"content\">${content}</div>\n * `;\n *\n * const context = { content: ['A', 'B', 'C'] };\n * const result = template(context);\n *\n * document.querySelector('#target').insertAdjacentHTML('beforeend', result);\n */\n\nexport default (strs, ...keys) => (data) => {\n  const arr = Array.isArray(data) ? data.slice() : [Object.assign({}, data)];\n  const lastIndex = strs.length - 1;\n\n  const dataArr = arr.map(d => (\n    keys.map((key, i) => {\n      let replace = '';\n      if (typeof key === 'function') {\n        replace = key(d[key.displayName]);\n      } else if (typeof key === 'object') {\n        replace = key.content(d[key.name]);\n      } else {\n        replace = d[key] === undefined ? key : d[key];\n      }\n\n      return strs[i] + replace;\n    }).join('') + strs[lastIndex]\n  ));\n\n  return dataArr.join('');\n};\n"],"names":["handleError","res","ok","statusText","Promise","reject","Error","handleContent","contentType","headers","get","test","json","post","input","data","fetch","Headers","JSON","stringify","then","encodeBase64","window","btoa","encodeURIComponent","str","replace","match","p1","String","fromCharCode","decodeBase64","decodeURIComponent","Array","from","atob","map","c","charCodeAt","toString","slice","join","obj","eventMap","Map","Object","entries","forEach","handler","event","addEventListener","e","trigger","target","dataset","hasOwnProperty","call","handlers","strs","keys","arr","isArray","assign","lastIndex","length","dataArr","key","i","d","displayName","babelHelpers.typeof","content","name","undefined"],"mappings":"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"}